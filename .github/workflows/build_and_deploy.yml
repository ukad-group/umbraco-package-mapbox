name: Build and deploy
on:
  push:
    branches:
      - main
      - development
  workflow_dispatch:

env:
  NUGET_FEED: https://api.nuget.org/v3/index.json

jobs:
  init:
    name: "Set version"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.tag }}
    steps:
      - uses: "actions/checkout@v3"
      - name: Sets pre-release tag
        run: |
          echo "PRE_RELEASE_TAG=development" >> $GITHUB_ENV
        if: ${{ github.ref == 'refs/heads/development' }}
      - uses: 1k-off/action-semver-tag-release@1.0.3
        id: version
        with:
          version: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_release_tag: ${{ env.PRE_RELEASE_TAG }}
          
  build-and-push-mapbox-core:
    runs-on: ubuntu-latest
    needs: [init]
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build Ukad.UmbracoPackageMapbox.Core/Ukad.UmbracoPackageMapbox.Core.csproj --configuration Release --no-restore
      - name: Pack
        run: dotnet pack Ukad.UmbracoPackageMapbox.Core/Ukad.UmbracoPackageMapbox.Core.csproj --configuration Release --output artifacts /p:Version=${{ needs.init.outputs.version }}
      - name: Push
        run: dotnet nuget push artifacts/Ukad.UmbracoPackageMapbox.Core.${{ needs.init.outputs.version }}.nupkg -k ${{ secrets.UKAD_NUGET_SRV_API_KEY }} -s ${{ env.NUGET_FEED }} --no-symbols
      - uses: actions/cache@v3
        name: Setup nuget package cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

  build-and-push-mapbox-static-assets:
    runs-on: ubuntu-latest
    needs: [init]
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build Ukad.UmbracoPackageMapbox.StaticAssets/Ukad.UmbracoPackageMapbox.StaticAssets.csproj --configuration Release --no-restore
      - name: Pack
        run: dotnet pack Ukad.UmbracoPackageMapbox.StaticAssets/Ukad.UmbracoPackageMapbox.StaticAssets.csproj --configuration Release --output artifacts /p:Version=${{ needs.init.outputs.version }}
      - name: Push
        run: dotnet nuget push artifacts/Ukad.UmbracoPackageMapbox.StaticAssets.${{ needs.init.outputs.version }}.nupkg -k ${{ secrets.UKAD_NUGET_SRV_API_KEY }} -s ${{ env.NUGET_FEED }} --no-symbols
      - uses: actions/cache@v3
        name: Setup nuget package cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

  build-and-push-mapbox:
    runs-on: ubuntu-latest
    needs: [init]
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore 
    - name: Build
      run: dotnet build Ukad.UmbracoPackageMapbox/Ukad.UmbracoPackageMapbox.csproj --configuration Release --no-restore
    - name: Pack
      run: dotnet pack Ukad.UmbracoPackageMapbox/Ukad.UmbracoPackageMapbox.csproj --configuration Release --output artifacts /p:Version=${{ needs.init.outputs.version }}
    - name: Push
      run: dotnet nuget push artifacts/Ukad.UmbracoPackageMapbox.${{ needs.init.outputs.version }}.nupkg -k ${{ secrets.UKAD_NUGET_SRV_API_KEY }} -s ${{ env.NUGET_FEED }} --no-symbols
    - uses: actions/cache@v3
      name: Setup nuget package cache
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
            ${{ runner.os }}-nuget-
